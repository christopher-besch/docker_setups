services:
    PPFrontend:
        image: photoprism/photoprism:latest
        container_name: "PPFrontend"
        depends_on:
            - PPDatabase
        volumes:
            - "{{ docker_photo_originals_dir }}:/photoprism/originals:ro"               # Original media files (DO NOT REMOVE)
            - "{{ docker_photo_data_dir }}:/photoprism/storage"                  # *Writable* storage folder for cache, database, and sidecar files (DO NOT REMOVE)
        environment:
            PHOTOPRISM_ADMIN_USER: "{{ docker_photo_admin_name }}"                 # admin login username
            PHOTOPRISM_ADMIN_PASSWORD: "{{ docker_photo_admin_password }}"          # initial admin password (8-72 characters)
            PHOTOPRISM_AUTH_MODE: "password"               # authentication mode (public, password)
            PHOTOPRISM_SITE_URL: "http://{{ docker_photo_domain }}"  # server URL in the format "http(s)://domain.name(:port)/(path)"
            LETSENCRYPT_HOST: {{ docker_photo_domain }}
            VIRTUAL_HOST: {{ docker_photo_domain }}
            VIRTUAL_PORT: 2342
            # done by reverse proxy
            PHOTOPRISM_DISABLE_TLS: "true"                # disables HTTPS/TLS even if the site URL starts with https:// and a certificate is available
            PHOTOPRISM_DEFAULT_TLS: "false"                 # defaults to a self-signed HTTPS/TLS certificate if no other certificate is available
            PHOTOPRISM_ORIGINALS_LIMIT: 5000               # file size limit for originals in MB (increase for high-res video)
            PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
            PHOTOPRISM_LOG_LEVEL: "info"                   # log level: trace, debug, info, warning, error, fatal, or panic
            PHOTOPRISM_READONLY: "true"                   # do not modify originals directory (reduced functionality)
            PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
            PHOTOPRISM_DISABLE_CHOWN: "false"              # disables updating storage permissions via chmod and chown on startup
            PHOTOPRISM_DISABLE_WEBDAV: "false"             # disables built-in WebDAV server
            PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables settings UI and API
            PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # disables all features depending on TensorFlow
            PHOTOPRISM_DISABLE_FACES: "false"              # disables face detection and recognition (requires TensorFlow)
            PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification (requires TensorFlow)
            PHOTOPRISM_DISABLE_VECTORS: "false"            # disables vector graphics support
            PHOTOPRISM_DISABLE_RAW: "true"                # disables indexing and conversion of RAW images
            PHOTOPRISM_RAW_PRESETS: "false"                # enables applying user presets when converting RAW images (reduces performance)
            PHOTOPRISM_JPEG_QUALITY: 85                    # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
            PHOTOPRISM_DETECT_NSFW: "false"                # automatically flags photos as private that MAY be offensive (requires TensorFlow)
            PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive (no effect without TensorFlow)
            PHOTOPRISM_DATABASE_DRIVER: "mysql"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
            PHOTOPRISM_DATABASE_SERVER: "PPDatabase:3306"     # MariaDB or MySQL database server (hostname:port)
            PHOTOPRISM_DATABASE_NAME: "photoprism"         # MariaDB or MySQL database schema name
            PHOTOPRISM_DATABASE_USER: "photoprism"         # MariaDB or MySQL database user name
            PHOTOPRISM_DATABASE_PASSWORD: "{{ docker_photo_db_password }}"       # MariaDB or MySQL database user password
            PHOTOPRISM_SITE_CAPTION: "{{ docker_photo_site_caption }}"
            PHOTOPRISM_SITE_DESCRIPTION: "{{ docker_photo_site_description }}"                # meta site description
            PHOTOPRISM_SITE_AUTHOR: "{{ docker_photo_author }}"                     # meta site author
            PHOTOPRISM_WORKERS: 1
        working_dir: "/photoprism" # do not change or remove
        restart: unless-stopped
        networks: ["net", "common"]

    PPDatabase:
        # https://hub.docker.com/_/mariadb
        image: mariadb:10.11.11
        container_name: "PPDatabase"
        command: mariadbd --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
        volumes:
            - "{{ docker_photo_dir }}/db:/var/lib/mysql" 
        environment:
            MARIADB_AUTO_UPGRADE: "1"
            MARIADB_INITDB_SKIP_TZINFO: "1"
            MARIADB_DATABASE: "photoprism"
            MARIADB_USER: "photoprism"
            MARIADB_PASSWORD: "{{ docker_photo_db_password }}"
            MARIADB_ROOT_PASSWORD: "insecure"
        restart: unless-stopped
        networks: ["common"]

    PPBorgBackup:
        image: chrisbesch/docker_borg_backup
        volumes:
            - "{{ docker_photo_dir }}:/origin/photo_dir:ro"
            - "{{ docker_photo_data_dir }}:/origin/data:ro"
            - "{{ docker_photo_borg_dir }}:/repo"
            # needs to be able to start and stop other containers
            - "{{ docker_socket }}:/var/run/docker.sock:rw"
        environment:
            CRON_TIME: "{{ docker_photo_borg_cron }}"
            BORG_COMPRESSION: zstd,10
            BORG_PREFIX: photo
            PRUNE_CFG: "{{ borg_prune_cfg }}"
            # stop these containers before backup
            CONTAINERS: "PPFrontend PPDatabase"
        restart: "unless-stopped"

networks:
    net:
        external: true
    common:
        internal: true

