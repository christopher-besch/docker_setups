services:
    ForgejoFrontend:
        # https://code.forgejo.org/forgejo/-/packages/container/runner/versions
        image: "codeberg.org/forgejo/forgejo:10.0.3"
        container_name: "ForgejoFrontend"

        volumes:
            - "{{ docker_forgejo_dir }}/forgejo_data:/data"
            - "{{ docker_forgejo_box_dir }}/git/lfs:/data/git/lfs"
            - "{{ docker_forgejo_box_dir }}/git/repositories:/data/git/repositories"

        environment:
            LETSENCRYPT_HOST: "{{ docker_forgejo_domain }}"
            VIRTUAL_HOST: "{{ docker_forgejo_domain }}"
            VIRTUAL_PORT: 3000
            USER_UID: 1000
            USER_GID: 1000
            FORGEJO__database__DB_TYPE: postgres
            FORGEJO__database__HOST: ForgejoDatabase:5432
            FORGEJO__database__NAME: forgejo
            FORGEJO__database__USER: forgejo
            FORGEJO__database__PASSWD: "{{ docker_forgejo_db_password }}"

        ports:
            - "222:22"

        depends_on:
            - "ForgejoDatabase"
        # accept docker stop
        restart: "unless-stopped"
        networks: ["net", "common"]

    ForgejoDatabase:
        image: "postgres:17"
        container_name: "ForgejoDatabase"

        volumes:
            - "{{ docker_forgejo_dir }}/forgejo_db:/var/lib/postgresql/data"

        environment:
            POSTGRES_DB: forgejo
            POSTGRES_USER: forgejo
            POSTGRES_PASSWORD: "{{ docker_forgejo_db_password }}"

        restart: "unless-stopped"
        networks: ["common"]

    ForgejoRunner:
        # https://code.forgejo.org/forgejo/-/packages/container/runner
        image: "code.forgejo.org/forgejo/runner:6"
        depends_on:
            - "ForgejoFrontend"
        # TODO: find a way to make installing dependencies work without root user
        user: 0:0

        volumes:
            - "{{ docker_forgejo_runner_dir }}:/data"
        command: '/bin/sh -c "apk add nodejs npm python3 py3-pip py-virtualenv && forgejo-runner daemon"'
        # command: '/bin/sh -c "while : ; do sleep 1 ; done ;"'

        restart: "unless-stopped"

networks:
    net:
        external: true
    common:
        internal: true
