services:
    TDFrontend:
        # https://hub.docker.com/r/vabene1111/recipes/tags
        image: vabene1111/recipes:1.5.34
        container_name: "TDFrontend"
        volumes:
            - {{ docker_tandoor_dir }}/td_data/staticfiles:/opt/recipes/staticfiles
            - {{ docker_tandoor_dir }}/td_data/mediafiles:/opt/recipes/mediafiles
            - nginx_config:/opt/recipes/nginx/conf.d:ro

        environment:
            ALLOWED_HOSTS: {{ docker_tandoor_domain }}
            LETSENCRYPT_HOST: {{ docker_tandoor_domain }}
            VIRTUAL_HOST: {{ docker_tandoor_domain }}
            # get with `openssl rand -hex 32`
            SECRET_KEY: {{ docker_tandoor_secret_key }}
            DB_ENGINE: django.db.backends.postgresql
            POSTGRES_HOST: TDDatabase
            POSTGRES_PORT: 5432
            POSTGRES_USER: tandoor
            # get with `openssl rand -hex 32`
            POSTGRES_PASSWORD: {{ docker_tandoor_db_password }}
            POSTGRES_DB: tandoordb
            GUNICORN_MEDIA: 1
            DEBUG: 0

        depends_on:
            - "TDDatabase"
        restart: "unless-stopped"
        networks: ["net", "common"]

    TDDatabase:
        # https://docs.tandoor.dev/install/docker/#docker-compose
        image: postgres:15-alpine
        container_name: "TDDatabase"
        volumes:
            - {{ docker_tandoor_dir }}/td_postgres:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: tandoor
            POSTGRES_PASSWORD: {{ docker_tandoor_db_password }}
            POSTGRES_DB: tandoordb
        restart: "unless-stopped"
        networks: ["common"]

    TDBorgBackup:
        image: chrisbesch/docker_borg_backup
        volumes:
            - "{{ docker_tandoor_dir }}:/origin:ro"
            - "{{ docker_tandoor_borg_dir }}:/repo"
            # needs to be able to start and stop other containers
            - "{{ docker_socket }}:/var/run/docker.sock:rw"
        environment:
            CRON_TIME: "{{ docker_tandoor_borg_cron }}"
            BORG_COMPRESSION: zstd,10
            BORG_PREFIX: tandoor
            PRUNE_CFG: "{{ borg_prune_cfg }}"
            # stop these containers before backup
            CONTAINERS: "TDFrontend TDDatabase"
        restart: "unless-stopped"

volumes:
    nginx_config:
        external: true

networks:
    net:
        external: true
    common:
        internal: true
