services:
    FFFrontend:
        # https://hub.docker.com/r/fireflyiii/core/tags
        container_name: "FFFrontend"
        image: "fireflyiii/core:version-6.2.10"
        restart: always
        volumes:
            - {{ docker_firefly_dir }}/ff_upload:/var/www/html/storage/upload
        environment:
            APP_ENV: local
            APP_DEBUG: false
            SITE_OWNER: {{ docker_firefly_owner_email }}
            # get with `openssl rand -base64 32 | head -c 32`
            APP_KEY: {{ docker_firefly_app_key }}
            DEFAULT_LANGUAGE: en_GB
            DEFAULT_LOCALE: en_GB
            TRUSTED_PROXIES: {{ docker_net_subnet }}
            LOG_CHANNEL: stdout
            DB_CONNECTION: mysql
            DB_HOST: FFDatabase
            DB_PORT: 3306
            DB_DATABASE: FF
            DB_USERNAME: firefly
            # get with `openssl rand -hex 32`
            DB_PASSWORD: {{ docker_firefly_db_password }}
            LETSENCRYPT_HOST: {{ docker_firefly_domain }}
            VIRTUAL_HOST: {{ docker_firefly_domain }}
            VIRTUAL_PORT: 8080
            MAIL_MAILER: log
            MAIL_HOST: null
            MAIL_PORT: 2525
            MAIL_FROM: changeme@example.com
            MAIL_USERNAME: null
            MAIL_PASSWORD: null
            MAIL_ENCRYPTION: null
        depends_on:
            - FFDatabase
        networks: ["common", "net"]

    FFDatabase:
        # https://hub.docker.com/_/mariadb
        image: "mariadb:10.11.11"
        container_name: "FFDatabase"

        volumes:
            - "{{ docker_firefly_dir }}/ff_maria_db:/var/lib/mysql"

        environment:
            MYSQL_RANDOM_ROOT_PASSWORD: 1
            # MYSQL_ROOT_PASSWORD: MYSQL_ROOT_PASSWORD
            MYSQL_DATABASE: FF
            MYSQL_USER: firefly
            MYSQL_PASSWORD: {{ docker_firefly_db_password }}
            MARIADB_AUTO_UPGRADE: true

        # accept docker stop
        restart: "unless-stopped"
        networks: ["common"]

    FFCron:
        image: alpine
        # get token on /profile under the "Command line token" header
        command: sh -c "echo \"{{ docker_firefly_automation_cron }} wget -qO- http://FFFrontend:8080/api/v1/cron/{{ docker_firefly_automation_cron_token }}\" | crontab - && crond -f -L /dev/stdout"

        # accept docker stop
        restart: "unless-stopped"
        networks: ["common"]


    FFBorgBackup:
        image: chrisbesch/docker_borg_backup
        volumes:
            - "{{ docker_firefly_dir }}:/origin:ro"
            - "{{ docker_firefly_borg_dir }}:/repo"
            # needs to be able to start and stop other containers
            - "{{ docker_socket }}:/var/run/docker.sock:rw"
        environment:
            CRON_TIME: "{{ docker_firefly_borg_cron }}"
            BORG_COMPRESSION: zstd,10
            BORG_PREFIX: firefly
            PRUNE_CFG: "{{ borg_prune_cfg }}"
            # stop these containers before backup
            CONTAINERS: "FFFrontend FFDatabase"
        restart: "unless-stopped"

networks:
    net:
        external: true
    common:
        internal: true
