# based on https://linuxhandbook.com/install-nextcloud-docker
services:
    NCFrontend:
        # https://hub.docker.com/_/nextcloud
        image: "nextcloud:29.0.16"
        container_name: "NCFrontend"

        volumes:
            - "{{ docker_nextcloud_dir }}/nc_data:/var/www/html"
            - "{{ docker_nextcloud_lfs_dir }}:/lfs"

        environment:
            LETSENCRYPT_HOST: "{{ docker_nextcloud_domain }}"
            VIRTUAL_HOST: "{{ docker_nextcloud_domain }}"
            TRUSTED_PROXIES: "{{ docker_net_subnet }}"
            OVERWRITEPROTOCOL: https
            MYSQL_DATABASE: NC
            MYSQL_USER: nextcloud
            # get with `openssl rand -hex 32`
            MYSQL_PASSWORD: "{{ docker_nextcloud_db_password }}"
            MYSQL_HOST: NCDatabase
            NEXTCLOUD_TRUSTED_DOMAINS: "{{ docker_nextcloud_domain }}"

        depends_on:
            - "NCDatabase"
        # accept docker stop
        restart: "unless-stopped"
        networks: ["net", "common"]

    NCDatabase:
        # https://hub.docker.com/_/mariadb
        # https://docs.nextcloud.com/server/latest/admin_manual/installation/system_requirements.html
        image: "mariadb:10.11.13"
        container_name: "NCDatabase"

        volumes:
            - "{{ docker_nextcloud_dir }}/nc_maria_db:/var/lib/mysql"

        environment:
            MYSQL_RANDOM_ROOT_PASSWORD: 1
            # - MYSQL_ROOT_PASSWORD
            MYSQL_DATABASE: NC
            MYSQL_USER: nextcloud
            MYSQL_PASSWORD: "{{ docker_nextcloud_db_password }}"
            MARIADB_AUTO_UPGRADE: true

        # accept docker stop
        restart: "unless-stopped"
        networks: ["common"]

    NCBorgBackup:
        image: chrisbesch/docker_borg_backup
        volumes:
            - "{{ docker_nextcloud_dir }}:/origin/nc:ro"
            - "{{ docker_nextcloud_lfs_dir }}:/origin/lfs:ro"
            - "{{ docker_nextcloud_borg_dir }}:/repo"
            # needs to be able to start and stop other containers
            - "{{ docker_socket }}:/var/run/docker.sock:rw"
        environment:
            CRON_TIME: "{{ docker_nextcloud_borg_cron }}"
            BORG_COMPRESSION: zstd,10
            BORG_PREFIX: nextcloud
            PRUNE_CFG: "{{ borg_prune_cfg }}"
            # stop these containers before backup
            CONTAINERS: "NCFrontend NCDatabase"
        restart: "unless-stopped"

    # enable cron for background job in administrative basic settings
    NCCron:
        image: alpine
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:rw"
        command: sh -c 'apk update && apk add docker-cli && sh -c "echo \"*/5 * * * * docker exec -u www-data NCFrontend php -f /var/www/html/cron.php\" | crontab - && crond -f -L /dev/stdout"'
        restart: "unless-stopped"

networks:
    net:
        external: true
    common:
        internal: true
